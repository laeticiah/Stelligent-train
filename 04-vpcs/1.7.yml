AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  AMI:
    Type: String
  InstanceType:
    Type: String
  KeyFile:
    Type: String
  Username:
    Type: String

Resources:
  EC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: !Ref AMI
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyFile
      SubnetId: !ImportValue vpctask-mypubSubnet
      SecurityGroupIds:
        - Ref: InstanceSecurityGroup

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: Allow ssh/ICMP
        VpcId: !ImportValue vpctask-VPC
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: 22
            ToPort: 22
            CidrIp: 0.0.0.0/0
          - IpProtocol: icmp
            FromPort: 8
            ToPort: -1
            CidrIp: 0.0.0.0/0
            
  MyEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      InstanceId: !Ref EC2Instance

  MyEIP2:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  
  NAT:
   Type: AWS::EC2::NatGateway
   Properties:
      AllocationId: !GetAtt MyEIP2.AllocationId
      SubnetId: !ImportValue vpctask-mypubSubnet

  Subnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !ImportValue vpctask-VPC
      CidrBlock: 10.0.1.0/24

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !ImportValue vpctask-VPC
  
  Route:
    Type: AWS::EC2::Route
    Properties:
        RouteTableId: !Ref RouteTable
        DestinationCidrBlock: 0.0.0.0/0
        NatGatewayId: !Ref NAT

  # new ec2 for NatGateway
  EC2Instance2:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: !Ref AMI
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyFile
      SubnetId: !Ref Subnet2
      # SecurityGroupIds:
      #   - Ref: InstanceSecurityGroup

Outputs:
  PublicIP:
    Value: !GetAtt EC2Instance.PublicIp